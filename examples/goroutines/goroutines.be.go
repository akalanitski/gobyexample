// _горуціны_ — гэта лёгкі паток.

package main

import (
	"fmt"
	"time"
)

func f(from string) {
	for i := 0; i < 3; i++ {
		fmt.Println(from, ":", i)
	}
}

func main() {

	// Уявім, у нас ёсць выклік функцыі `f(s)`. Вось як
	// мы б выклікалі яе звычайным спосабам, запускаючы яе
	// сінхронна.
	f("direct")

	// Каб выклікаць гэтую функцыю ў горуціна, выкарыстоўвайце
	// `go f(s)`. Новая горуціна будзе выконвацца
	// адначасова з выклікальнай.
	go f("goroutine")

	// Так жа можна запусціць гаруціны з ананімнымі фукцыямі
	go func(msg string) {
		fmt.Println(msg)
	}("going")

	// Абодзьве функцыі цяпер выконваюцца асінхронна ў
	// асобных горуцінах. Пачакайце іх завяршэння
	// (для больш надзейнага падыходу выкарыстоўвайце [WaitGroup](waitgroups.html)).
	time.Sleep(time.Second)
	fmt.Println("done")
}
