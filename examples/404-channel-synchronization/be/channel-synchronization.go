// Можна выкарыстоўваць каналы для сінхранізацыі выканання
// ў горуцінах. Вось прыклад выкарыстання
// блакуючага прыёмніка для чакання завяршэння горуціны.
// Пры чаканні завяршэння некалькіх горуцін,
// можна аддаць перавагу [WaitGroup](waitgroups).

package main

import (
	"fmt"
	"time"
)

// Функцыя, якая будзе выконвацца ў горуціне.
// Канал `done` будзе выкарыстаны для апавяшчэння іншай
// горуціны пра тое, што праца гэтай функцыі закончана.
func worker(done chan bool) {
	fmt.Print("working...")
	time.Sleep(time.Second)
	fmt.Println("done")

	// Адпраўляем значэнне, каб паведаміць, што праца скончана.
	done <- true
}

func main() {

	// Запускаем горуціну з `worker`, даючы ёй канал
	// для паведамленняў
	done := make(chan bool, 1)
	go worker(done)

	// Чакаем, пакуль не атрымаем паведамленне ад
	// функцыі `worker` з каналу.
	<-done
}
